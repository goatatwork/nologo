version: "3.9"

networks:
  proxynet:
    external: false
    name: proxynet
  internalnet:
    external: false

volumes:
  ruby_bundle:
  db_data:
  letsencrypt:
  redis_data:

services:
  traefik:
    image: traefik:v2.3
    ports:
      - "3000:3000"
      - "8088:8080" # traefik dashboard
    command:
      - --api.insecure=true
      - --api.dashboard=true
      - --api.debug=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=proxynet
      - --entrypoints.web.address=:3000
      - --certificatesresolvers.mytlschallenge.acme.httpChallenge.entrypoint=web
      - --certificatesresolvers.mytlschallenge.acme.email=ryantgray@gmail.com
      - --certificatesresolvers.mytlschallenge.acme.storage=/letsencrypt/acme.json
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - letsencrypt:/letsencrypt
    networks:
      - proxynet
  app:
    image: monitorbot.the4909.net:5050/goat/dockerfiles/rails-7.0.0:latest
    environment:
      - REDIS_URL=redis://redis:6379/0
      - REDIS_URL_SIDEKIQ=redis://redis:6379/0
    volumes:
      - ruby_bundle:/usr/local/bundle
      - ./:/app
    working_dir: /app
    networks:
      - proxynet
      - internalnet
    labels:
      - traefik.enable=true
      - traefik.http.routers.app-router.entrypoints=web
      # - traefik.http.routers.app-router.rule=Host(`goatbot.the4909.net`) && PathPrefix(`/documentation`)
      - traefik.http.routers.app-router.rule=Host(`${FQDN}`)
      - traefik.http.routers.app-router.service=app-service
      - traefik.http.services.app-service.loadbalancer.server.port=3000
  # sidekiq:
  #   image: monitorbot.the4909.net:5050/goat/dockerfiles/rails-7.0.0:latest
  #   environment:
  #     - REDIS_URL=redis://redis:6379/0
  #     - REDIS_URL_SIDEKIQ=redis://redis:6379/0
  #   volumes:
  #     - ruby_bundle:/usr/local/bundle
  #     - ./:/app
  #   working_dir: /app
  #   networks:
  #     - internalnet
  #   labels:
  #     - traefik.enable=false
  #   command: bundle exec sidekiq
  # db:
  #   image: postgres:13-alpine
  #   volumes:
  #     - db_data:/var/lib/postgresql/data
  #   environment:
  #     POSTGRES_PASSWORD: password
  #   networks:
  #     - internalnet
  redis:
    image: redis:alpine3.15
    volumes:
      - redis_data:/data
    labels:
      - traefik.enable=false
    networks:
      - internalnet